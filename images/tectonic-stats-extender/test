#!/bin/bash -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
pushd "$SCRIPT_DIR" > /dev/null

PKGS=$(go list ./... | grep -v /vendor)
FORMATTABLE=$(find . -type f -name '*.go' -not -path './vendor/*')
LINTABLE="$(go list ./... | grep -v -E \(/vendor\))"

for p in $PKGS; do
    go test "$p" -cover
    go vet "$p"
done

for f in $FORMATTABLE; do
    fmtRes=$(gofmt -l "$f")
    if [ -n "${fmtRes}" ]; then
      echo -e "gofmt checking failed:\n${fmtRes}"
      exit 2
    fi
done

CGO_ENABLED=0 go build -o tools/golint github.com/coreos-inc/tectonic/stats-extender/vendor/github.com/golang/lint/golint
lintRes=$(echo "$LINTABLE" | xargs -n 1 tools/golint)
if [ -n "${lintRes}" ]; then
  echo -e "golint checking failed:\n${lintRes}"
  exit 2
fi

popd > /dev/null
